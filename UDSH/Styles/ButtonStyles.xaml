<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">
    
    <!--
        TODO: Above define each variable, for now corner radius, and create new button styles for each use case.
        (Important Note: be careful when using Static and Dynamic resources)
        - Also, there is a possibilty that the implementation of backgrounds may need to change.
    -->

    <Thickness x:Key="QuickActionDotsMargins" Left="0" Top="0" Right="8" Bottom="0"/>
    <System:Double x:Key="QuickActionDotsWidthAndHeight">17</System:Double>

    <CornerRadius x:Key="Button.Radius" TopLeft="0" BottomLeft="0" TopRight="0" BottomRight="0"/>
    <CornerRadius x:Key="CloseOpenedPageButton.Radius" TopLeft="0" BottomLeft="0" TopRight="5" BottomRight="0"/>
    <CornerRadius x:Key="ShortcutButton.Radius">15</CornerRadius>
    <CornerRadius x:Key="NewFileCloseButton.Radius">10</CornerRadius>
    <CornerRadius x:Key="NoteCloseButton.Radius">8</CornerRadius>
    <CornerRadius x:Key="StartupButton.Radius">8</CornerRadius>
    <CornerRadius x:Key="ConfirmButton.Radius">4</CornerRadius>

    <Style TargetType="Button" x:Key="Placeholder">
        
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource Button.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource MainHoveredControlButtonColor}"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource MainUnselectedButtonColor}"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>
        
    </Style>

    <Style TargetType="Button" x:Key="CloseButton">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource MainHoveredCloseAppButtonColor}"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource MainUnselectedButtonColor}"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="CloseOpenedPageButton">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource CloseOpenedPageButton.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource MainHoveredClosePageButtonColor}"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource MainUnselectedButtonColor}"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="NoteCloseButton">
        <Setter Property="Background" Value="{StaticResource MainNoteClosePageButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource NoteCloseButton.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainHoveredNoteClosePageButtonColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainNoteClosePageButtonColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="Button" x:Key="NewFileCreationButton">
        <Setter Property="Background" Value="{StaticResource ShortcutButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource ShortcutButton.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainHoveredControlButtonColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource ShortcutButtonColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="Button" x:Key="SelectionNewFileCreationButton">
        <Setter Property="Background" Value="{StaticResource MainBlankSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource ShortcutButton.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Quick Action Dots -->
    <Style TargetType="Button" x:Key="QADots">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsEnabled" Value="{Binding IsPenToolButtonDisabled}"/>
        <Setter Property="IsHitTestVisible" Value="{Binding IsPenToolButtonDisabled}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="{StaticResource QuickActionDotsWidthAndHeight}"/>
        <Setter Property="Width" Value="{StaticResource QuickActionDotsWidthAndHeight}"/>
        <Setter Property="Margin" Value="{StaticResource QuickActionDotsMargins}"/>
        <Setter Property="Panel.ZIndex" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource Button.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- New File Creation Close Button -->
    <Style TargetType="Button" x:Key="NewFileCreationCloseButton">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource NewFileCloseButton.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainHoveredControlButtonColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainUnselectedButtonColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Toggle Buttons -->
    <Style TargetType="ToggleButton" x:Key="HeaderToggleButtons">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource Button.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainHoveredControlButtonColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainUnselectedButtonColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="Button" x:Key="StartupButton">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource StartupButton.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainHoveredControlButtonColor}"
                                        Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainUnselectedButtonColor}"
                                        Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="ToggleButton" x:Key="HoldButton">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource Button.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="Button" x:Key="ImageConfirm">
        <Setter Property="Background" Value="#393E46"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource ConfirmButton.Radius}">
                        <ContentPresenter Content="Confirm" TextBlock.Foreground="#FFFFFF" HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="#DBAD2F"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="#393E46"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    
    <!-- Open Files Buttons -->
    <Style TargetType="Button" x:Key="OpenFilesButtonRight">
        <Setter Property="Background" Value="{StaticResource MainOpenPageRepeatButtonRight}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsHitTestVisible" Value="{Binding IsRightScrollButtonActive}"/>
        <Setter Property="Opacity" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource Button.Radius}">
                        <Grid>
                            <Image Source="/Resource/RightArrow.png" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,-10,0"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00DBAD2F"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#33DBAD2F"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsRightScrollButtonActive}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                    To="1.0"
                                    Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     To="0.0"
                                     Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="OpenFilesButtonLeft">
        <Setter Property="Background" Value="{StaticResource MainOpenPageRepeatButtonLeft}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsHitTestVisible" Value="{Binding IsLeftScrollButtonActive}"/>
        <Setter Property="Opacity" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource Button.Radius}">
                        <Grid>
                            <Image Source="/Resource/LeftArrow.png" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-10,0,0,0"/>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#00DBAD2F"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#33DBAD2F"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsLeftScrollButtonActive}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                            To="1.0"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             To="0.0"
                                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    
    <!-- Min/Max/Close Buttons (Content) -->
    <Style TargetType="Button" x:Key="Content_MinimizeButton">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource ConfirmButton.Radius}">
                        <Image Source="/Resource/Minimize.png" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainHoveredControlButtonColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainUnselectedButtonColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="Button" x:Key="Content_NormalButton">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource ConfirmButton.Radius}">
                        <Image Source="/Resource/Normal.png" HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="15" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                    To="{StaticResource MainHoveredControlButtonColor}"
                                    Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                    To="{StaticResource MainUnselectedButtonColor}"
                                    Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="Button" x:Key="Content_MaxButton">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource ConfirmButton.Radius}">
                        <Image Source="/Resource/Max.png" HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Height="15" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                To="{StaticResource MainHoveredControlButtonColor}"
                                Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                To="{StaticResource MainUnselectedButtonColor}"
                                Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="Button" x:Key="Content_CloseButton">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource ConfirmButton.Radius}">
                        <Image Source="/Resource/Close.png" HorizontalAlignment="Center" Width="15" Height="15" VerticalAlignment="Center" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                            To="{StaticResource MainHoveredCloseAppButtonColor}"
                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                            To="{StaticResource MainUnselectedButtonColor}"
                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainPressedButtonSCB}"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    
    
    <!-- Navigation Buttons - Content Window -->
    <Style TargetType="Button" x:Key="ContentBackButton">
        <Setter Property="Background" Value="#939393"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4,0,0,4">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="ArrowTranslate" X="0" Y="0"/>
                            </Grid.RenderTransform>
                            <Image Source="/Resource/LeftArrow.png" Margin="10"/>
                            <Image x:Name="ImageMouseOver" Source="/Resource/LeftArrowOrange.png" Opacity="0" Margin="10"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        To="#393E46" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="ImageMouseOver" Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="X" Storyboard.TargetName="ArrowTranslate"
                                                         To="-3" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        To="#939393" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="ImageMouseOver" Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="X" Storyboard.TargetName="ArrowTranslate"
                                                         To="0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ContentNextButton">
        <Setter Property="Background" Value="#939393"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0,4,4,0">
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="ArrowTranslate" X="0" Y="0"/>
                            </Grid.RenderTransform>
                            <Image Source="/Resource/RightArrow.png" Margin="10"/>
                            <Image x:Name="ImageMouseOver" Source="/Resource/RightArrowOrange.png" Opacity="0" Margin="10"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        To="#393E46" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="ImageMouseOver" Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="X" Storyboard.TargetName="ArrowTranslate"
                                                         To="3" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        To="#939393" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="ImageMouseOver" Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetProperty="X" Storyboard.TargetName="ArrowTranslate"
                                                         To="0" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Confirm/Cancel Button -->
    <Style TargetType="Button" x:Key="RenameItemConfirmButton">
        <Setter Property="Background" Value="#DBAD2F"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsEnabled" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <TextBlock Style="{StaticResource DefaultText}" Text="Confirm" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="States">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        To="#DBAD2F"
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        To="#ADADAD"
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="#C79E2D"
                                        Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="#DBAD2F"
                                        Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <DataTrigger Binding="{Binding RenameNewName}" Value="">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="RenameItemCancelButton">
        <Setter Property="Background" Value="#F83030"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <TextBlock Style="{StaticResource DefaultText}" Text="Cancel" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            To="#DF2727"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            To="#F83030"
                                            Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Testing Ground -->
    <Style TargetType="Button" x:Key="ButtonInterp">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{StaticResource CloseOpenedPageButton.Radius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="Yellow"
                                        Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                            Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                            To="{StaticResource MainUnselectedButtonColor}"
                            Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>