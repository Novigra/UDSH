<!-- Copyright (C) 2025 Mohammed Kenawy -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UDSH.View"
                    xmlns:MVVM="clr-namespace:UDSH.MVVM"
                    xmlns:Conv="clr-namespace:UDSH.Converters">

    <CornerRadius x:Key="SelectedFile.Radius" TopLeft="5" BottomLeft="0" TopRight="5" BottomRight="0"/>
    <CornerRadius x:Key="SideContentHighlight.Radius" TopLeft="0" BottomLeft="0" TopRight="4000" BottomRight="4000"/>
    <Conv:HeightConverter x:Key="WidthConverter"/>

    <Style TargetType="ListView" x:Key="OpenedPagesLayout">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True">
                        <MVVM:CustomScrollViewer x:Name="OpenScroll"
                        HorizontalScrollBarVisibility="Hidden" 
                        VerticalScrollBarVisibility="Disabled"
                        PanningMode="HorizontalOnly" 
                        Padding="{TemplateBinding Padding}" 
                        BorderThickness="0" Style="{StaticResource OpenFilesScrollViewer}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </MVVM:CustomScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="ListViewItem" x:Key="OpenedPages">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Height="40" BorderThickness="0" Padding="0" Background="{TemplateBinding Background}" CornerRadius="{StaticResource SelectedFile.Radius}">
                        <StackPanel Orientation="Horizontal">
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3">
                                <Image x:Name="ImageNormal" Source="{Binding fileImageNormal}" Panel.ZIndex="0"/>
                                <Image x:Name="ImageSelected" Source="{Binding fileImageSelected}" Panel.ZIndex="1" Opacity="0"/>
                            </Grid>
                            <TextBlock Text="{Binding FileName}" Style="{StaticResource DefaultText}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,5,5,5"/>
                            <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Button Panel.ZIndex="0" Style="{StaticResource CloseOpenedPageButton}" Command="{Binding DataContext.CloseOpenedFile, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}"/>
                                <Image Panel.ZIndex="1" Margin="13,15,13,11" Source="/Resource/Close.png"/>
                                <Image x:Name="ImageCloseSelected" Panel.ZIndex="2" Margin="13,15,13,11" Source="/Resource/CloseSelected.png" Opacity="0"/>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ImageSelected" Storyboard.TargetProperty="Opacity"
                                                         To="1.0"
                                                         Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="ImageCloseSelected" Storyboard.TargetProperty="Opacity"
                                                         To="1.0"
                                                         Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ImageSelected" Storyboard.TargetProperty="Opacity"
                                                         To="0.0"
                                                         Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="ImageCloseSelected" Storyboard.TargetProperty="Opacity"
                                                         To="0.0"
                                                         Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource MainSelectedButtonColor}"
                                            Duration="0:0:0.1"/>

                            <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource MainSelectedItemTextColor}"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource MainUnselectedButtonColor}"
                                            Duration="0:0:0.1"/>

                            <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource MainStandardTextColor}"
                                            Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- OpenedPagesListView -->
    <Style TargetType="ListView" x:Key="OpenedPagesListLayout">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True">
                        <MVVM:CustomScrollViewer x:Name="OpenFilesListScrollviewer"
                                                 HorizontalScrollBarVisibility="Disabled" 
                                                 VerticalScrollBarVisibility="Auto"
                                                 PanningMode="VerticalOnly" 
                                                 Padding="{TemplateBinding Padding}" 
                                                 BorderThickness="0"
                                                 Style="{StaticResource OpenFilesListScrollViewer}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </MVVM:CustomScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem" x:Key="OpenedPagesListItem">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Height="40" BorderThickness="0" Padding="5,0,20,0" Width="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=ActualWidth}" Background="{TemplateBinding Background}" CornerRadius="5">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3">
                                    <Image x:Name="ImageNormal" Source="{Binding fileImageNormal}" Panel.ZIndex="0"/>
                                    <Image x:Name="ImageSelected" Source="{Binding fileImageSelected}" Panel.ZIndex="1" Opacity="0"/>
                                </Grid>
                                <TextBlock Text="{Binding FileName}" Style="{StaticResource DefaultText}" TextTrimming="CharacterEllipsis" Width="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=ActualWidth, Converter={StaticResource WidthConverter}, ConverterParameter=95}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,5,5,5"/>
                            </StackPanel>

                            <Grid VerticalAlignment="Center" HorizontalAlignment="Right">
                                <Button Panel.ZIndex="0" Style="{StaticResource CloseOpenedPageButton}" Command="{Binding DataContext.CloseOpenedFile, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}"/>
                                <Image Panel.ZIndex="1" Margin="13,15,13,11" Source="/Resource/Close.png"/>
                                <Image x:Name="ImageCloseSelected" Panel.ZIndex="2" Margin="13,15,13,11" Source="/Resource/CloseSelected.png" Opacity="0"/>
                            </Grid>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ImageSelected" Storyboard.TargetProperty="Opacity"
                                                     To="1.0"
                                                     Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="ImageCloseSelected" Storyboard.TargetProperty="Opacity"
                                                     To="1.0"
                                                     Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ImageSelected" Storyboard.TargetProperty="Opacity"
                                                     To="0.0"
                                                     Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="ImageCloseSelected" Storyboard.TargetProperty="Opacity"
                                                     To="0.0"
                                                     Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainSelectedButtonColor}"
                                        Duration="0:0:0.1"/>

                            <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                        To="{StaticResource MainSelectedItemTextColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                        To="{StaticResource MainUnselectedButtonColor}"
                                        Duration="0:0:0.1"/>

                            <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                        To="{StaticResource MainStandardTextColor}"
                                        Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- NewFileDirectoryListView -->
    <Style TargetType="ListView" x:Key="NewFileDirectoryLayout">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="#FFFFFF" BorderThickness="0" SnapsToDevicePixels="True" Padding="5,5,0,5" CornerRadius="0,0,15,15">
                        <MVVM:CustomScrollViewer x:Name="OpenFilesListScrollviewer"
                                                 HorizontalScrollBarVisibility="Disabled" 
                                                 VerticalScrollBarVisibility="Visible"
                                                 PanningMode="VerticalOnly" 
                                                 Padding="{TemplateBinding Padding}" 
                                                 BorderThickness="0"
                                                 Style="{StaticResource OpenFilesListScrollViewer}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </MVVM:CustomScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem" x:Key="NewFileDirectoryListItem">
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Height="40" BorderThickness="0" Margin="0,0,0,0" Width="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=ActualWidth, Converter={StaticResource WidthConverter}, ConverterParameter=25}" Background="{TemplateBinding Background}" CornerRadius="5">
                        <TextBlock x:Name="FolderName" Text="{Binding}" Style="{StaticResource DefaultText}" Foreground="#6A6A6A" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="FolderName" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#6A6A6A" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#FFFFFF" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="FolderName" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#6A6A6A" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#BFBFBF" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="FolderName" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#DBAD2F" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#393E46" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <!--
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FolderName" Storyboard.TargetProperty="Opacity"
                                                 To="1.0"
                                                 Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FolderName" Storyboard.TargetProperty="Opacity"
                                                 To="0.0"
                                                 Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    -->
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                    To="{StaticResource MainSelectedButtonColor}"
                                    Duration="0:0:0.1"/>

                            <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                    To="{StaticResource MainSelectedItemTextColor}"
                                    Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                    To="{StaticResource MainUnselectedButtonColor}"
                                    Duration="0:0:0.1"/>

                            <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                    To="{StaticResource MainStandardTextColor}"
                                    Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
        -->
    </Style>


    <!-- SideContentDirectoryListView -->
    <Style TargetType="ListView" x:Key="SideContentDirectoryLayout">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True" Padding="4" CornerRadius="1">
                        <MVVM:CustomScrollViewer x:Name="OpenFilesListScrollviewer"
                                             HorizontalScrollBarVisibility="Auto" 
                                             VerticalScrollBarVisibility="Auto"
                                             PanningMode="Both" 
                                             Padding="{TemplateBinding Padding}" 
                                             BorderThickness="0"
                                             Style="{StaticResource SideContentScrollViewer}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </MVVM:CustomScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem" x:Key="SideContentDirectoryListItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Height="40" BorderThickness="0" Margin="0,0,0,0" Width="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=ActualWidth, Converter={StaticResource WidthConverter}, ConverterParameter=25}" Background="{TemplateBinding Background}" CornerRadius="5">
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Image Source="{Binding NodeImage}" Width="33" Height="33" Margin="0,-3,0,3"/>
                            <TextBlock Style="{StaticResource DefaultText}" Text="{Binding Name}" Margin="-10,0,0,0"/>
                        </StackPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="FolderName" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#6A6A6A" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#FFFFFF" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="FolderName" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#6A6A6A" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#BFBFBF" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="FolderName" Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)" To="#DBAD2F" Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#393E46" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <!--
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="FolderName" Storyboard.TargetProperty="Opacity"
                                             To="1.0"
                                             Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>

                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="FolderName" Storyboard.TargetProperty="Opacity"
                                             To="0.0"
                                             Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
                -->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ContentDirectoryListView - Details -->
    <Style TargetType="GridViewColumnHeader" x:Key="Content_GridViewColumnHeader">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#000000"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="BorderThickness" Value="0,0,0,3"/>
        <Setter Property="BorderBrush" Value="#C5C5C5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Margin="5,0,0,3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <Border x:Name="LinearBorder" HorizontalAlignment="Right" Margin="0,0,2,3" Width="20">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="1,0.5" EndPoint="0,0.5">
                                    <GradientStop Color="#EAEAEA"/>
                                    <GradientStop Color="#33EAEAEA" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <Thumb x:Name="PART_HeaderGripper" Width="4" HorizontalAlignment="Right" Background="Transparent" Cursor="SizeWE" Margin="0,0,-1,0"
                               Visibility="Visible" BorderThickness="0" Opacity="0"/>

                        <Rectangle x:Name="GripperVisuals" IsHitTestVisible="False" Width="3" HorizontalAlignment="Right" Fill="#C5C5C5" Margin="0,0,-1,0" Visibility="Visible"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="False">
                            <Setter TargetName="GripperVisuals" Property="Opacity" Value="0"/>
                            <Setter TargetName="LinearBorder" Property="Opacity" Value="0"/>
                            <Setter TargetName="PART_HeaderGripper" Property="Opacity" Value="0"/>
                            <Setter TargetName="PART_HeaderGripper" Property="IsHitTestVisible" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView" x:Key="ContentDirectoryLayout">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Grid>
                        <MVVM:CustomScrollViewer x:Name="OuterContentScrollviewer"
                                                 HorizontalScrollBarVisibility="Hidden" 
                                                 VerticalScrollBarVisibility="Disabled"
                                                 PanningMode="Both" 
                                                 Padding="{TemplateBinding Padding}" 
                                                 BorderThickness="0"
                                                 Style="{StaticResource ContentScrollViewer}">
                            <Grid Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <GridViewHeaderRowPresenter Columns="{Binding View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" AllowsColumnReorder="False"/>
                                </Grid>
                            </Grid>
                        </MVVM:CustomScrollViewer>

                        <MVVM:CustomScrollViewer Style="{StaticResource TestContentScrollViewer}" Margin="0,37,0,0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  Opacity="1" HorizontalAlignment="Left" Margin="0,0,0,0"/>
                        </MVVM:CustomScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Style TargetType="GridViewColumnHeader" BasedOn="{StaticResource Content_GridViewColumnHeader}"/>
        </Style.Resources>
    </Style>

    <Style TargetType="ListViewItem" x:Key="ContentDirectoryListItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <!-- Works but need modifications Width="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=ActualWidth, Converter={StaticResource WidthConverter}, ConverterParameter=30}" -->
                    <Border Height="40" BorderThickness="0" Margin="0,0,0,3" HorizontalAlignment="Left" Background="{TemplateBinding Background}" CornerRadius="5">
                        <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#A7A7A7" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#393E46" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ContentDirectoryListView - Large Icons -->
    <Style TargetType="ListView" x:Key="ContentDirectoryLayout_LargeIcons">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True">
                        <MVVM:CustomScrollViewer x:Name="OpenScroll"
                                                 HorizontalScrollBarVisibility="Disabled" 
                                                 VerticalScrollBarVisibility="Visible"
                                                 PanningMode="HorizontalOnly" 
                                                 Padding="{TemplateBinding Padding}" 
                                                 BorderThickness="0" Style="{StaticResource TestContentScrollViewer}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </MVVM:CustomScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem" x:Key="ContentDirectoryListViewItem_LargeIcons">
        <Setter Property="Background" Value="{StaticResource MainUnselectedButtonSCB}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="True"/>
        <!--<Setter Property="MVVM:ListViewCommand.ListViewItemMouseLeaveCommand" Value="{Binding DataContext.ListViewItemMouseLeave, RelativeSource={RelativeSource AncestorType=ListView}}"/>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Height="200" Width="200" BorderThickness="0" Padding="5" Background="{TemplateBinding Background}" CornerRadius="5" Margin="10">
                        <StackPanel Orientation="Vertical" Margin="0,10,0,0">
                            <Grid x:Name="IconGrid" Height="140" Width="150" HorizontalAlignment="Center">
                                <Image x:Name="NormalImage" Source="{Binding LargeNormalImage}" Panel.ZIndex="0"/>
                                <Image x:Name="HighlightImage" Source="{Binding LargeHighlightImage}" Panel.ZIndex="1" Opacity="0"/>
                            </Grid>

                            <Grid x:Name="TitleGrid" Margin="0,5,0,0">
                                <TextBlock x:Name="Title" Style="{StaticResource DefaultText}" Text="{Binding Name}" Foreground="#000000" HorizontalAlignment="Center"/>
                                <Image x:Name="RenameImage" Source="/Resource/RenameState.png" Height="30" Opacity="0"/>
                            </Grid>
                        </StackPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        To="Transparent" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="HighlightImage" Storyboard.TargetProperty="Opacity"
                                                         To="0.0" Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetName="Title" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        To="#000000" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                        To="#393E46" Duration="0:0:0.1"/>
                                        <DoubleAnimation Storyboard.TargetName="HighlightImage" Storyboard.TargetProperty="Opacity"
                                                         To="1.0" Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetName="Title" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        To="#DBAD2F" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Type}" Value="Folder">
                            <Setter TargetName="TitleGrid" Property="Margin" Value="0,-10,0,0"/>
                            <Setter TargetName="IconGrid" Property="Height" Value="150"/>
                            <Setter TargetName="IconGrid" Property="Width" Value="150"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding DataContext.OpenRenameTextBox, RelativeSource={RelativeSource AncestorType=ListView}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RenameImage" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="Title" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RenameImage" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="Title" Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- BN - Connection List -->
    <Style TargetType="ListView" x:Key="BNConnectionListView">
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="#EBEBEB" BorderThickness="0" SnapsToDevicePixels="True">
                        <MVVM:CustomScrollViewer x:Name="OpenScroll"
                                                 HorizontalScrollBarVisibility="Auto" 
                                                 VerticalScrollBarVisibility="Auto"
                                                 PanningMode="HorizontalOnly"
                                                 Padding="{TemplateBinding Padding}" 
                                                 BorderThickness="0" Style="{StaticResource BottomRightScrollViewer}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </MVVM:CustomScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem" x:Key="BNConnectionListViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Background="Transparent" BorderThickness="0" Padding="0">
                    <Border Background="#D9D9D9" BorderBrush="#4D4D4D" BorderThickness="3" CornerRadius="5">
                        <TextBlock Style="{StaticResource DefaultText}" Text="{Binding FileDirectory}" FontSize="15" Margin="2"/>
                    </Border>
                </ToolTip>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="BorderItem" Height="40" BorderThickness="0" Margin="0,0,0,0"  Background="{TemplateBinding Background}" CornerRadius="5">
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Image Source="/Resource/MKCBN.png" Width="33" Height="33" Margin="0,-3,0,3"/>
                            <TextBlock Style="{StaticResource DefaultText}" Text="{Binding FileName}" Foreground="#393E46" Margin="5,0,0,0"/>
                        </StackPanel>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderItem" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderItem" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#C8C8C8" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderItem" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" To="#A7A7A7" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CSF - Content Layout -->
    <Style TargetType="ListView" x:Key="CSFContentLayout">
        <Setter Property="Background" Value="{StaticResource MainBlankSCB}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CSF - Content -->
    <Style TargetType="ListViewItem" x:Key="CSFContent">
        <Setter Property="Background" Value="{StaticResource MainBlankSCB}"/>
        <Setter Property="Margin" Value="144,96,96,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderThickness="0" Padding="0" Background="{StaticResource MainBlankSCB}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="IsSelected" Value="True"/>
            </Trigger>
        </Style.Triggers>

    </Style>


    <!--################ CSF - Data Templates ################-->
    <DataTemplate x:Key="SceneHeadingTemplate"> <!-- TODO: Add data type  Margin="144,96,96,0"-->
        <Grid>
            <RichTextBox Style="{StaticResource ScriptText}" Panel.ZIndex="1" FontSize="16" 
                         FontWeight="Bold" Background="{StaticResource MainUnselectedButtonSCB}">
                <RichTextBox.Document>
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="{Binding Content, UpdateSourceTrigger=PropertyChanged}"/>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox.Document>
            </RichTextBox>
            <TextBox Style="{StaticResource HighlightScriptText}" Panel.ZIndex="0"  FontSize="19"
                     Text="Scene Heading" Foreground="Gray" BorderThickness="0" FontStyle="Italic" Background="{StaticResource MainBlankSCB}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ActionTemplate">
        <Grid  HorizontalAlignment="Stretch"> <!-- Margin="144, 12, 96, 0" Width="576" -->
            <RichTextBox Style="{StaticResource ScriptText}" Panel.ZIndex="2" FontSize="16"
                         Background="{StaticResource MainUnselectedButtonSCB}" HorizontalAlignment="Stretch">
                <RichTextBox.Document>
                    <FlowDocument>
                        <Paragraph>
                            <Run Text="{Binding Content, UpdateSourceTrigger=PropertyChanged}"/>
                        </Paragraph>
                    </FlowDocument>
                </RichTextBox.Document>
            </RichTextBox>
            <TextBox Style="{StaticResource HighlightScriptText}" Panel.ZIndex="1" FontSize="19"
                     Text="Action" Foreground="Gray" BorderThickness="0" FontStyle="Italic" HorizontalAlignment="Stretch"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CharacterTemplate">
        <StackPanel Orientation="Horizontal" Margin="355, 18, 96, 0">
            <Grid Width="365">
                <RichTextBox Style="{StaticResource ScriptText}" Panel.ZIndex="2" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="16"
                             Background="{StaticResource MainUnselectedButtonSCB}"/>
                <TextBox Style="{StaticResource HighlightScriptText}" Panel.ZIndex="1" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="19"
                         Text="Character" Foreground="Gray" BorderThickness="0" FontStyle="Italic"/>
            </Grid>
            <Button Width="50" Height="50"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="DialogueTemplate">
        <Grid Margin="240, 6, 96, 0" Width="480">
            <RichTextBox Style="{StaticResource ScriptText}" Panel.ZIndex="2" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="16"
                         Background="{StaticResource MainUnselectedButtonSCB}"/>
            <TextBox Style="{StaticResource HighlightScriptText}" Panel.ZIndex="1" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="19"
                     Text="Dialogue" Foreground="Gray" BorderThickness="0" FontStyle="Italic"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BranchNodeTemplate"> <!-- Cant't edit text -->
        <Border Background="{StaticResource MainInputNodeSCB}" HorizontalAlignment="Center" BorderThickness="0" CornerRadius="4" Width="365">
            <Grid HorizontalAlignment="Center" >
                <RichTextBox Style="{StaticResource ScriptText}" Panel.ZIndex="2" HorizontalAlignment="Center" FontSize="16"
                             Background="{StaticResource MainUnselectedButtonSCB}"/>
                <Image HorizontalAlignment="Right"/>
            </Grid>
        </Border>
    </DataTemplate>

    <local:ActiveElementDataTemplateSelector x:Key="AEDataSelector"
                                         SceneHeadingTemplate ="{StaticResource SceneHeadingTemplate}"
                                         ActionTemplate ="{StaticResource ActionTemplate}"
                                         CharacterTemplate ="{StaticResource CharacterTemplate}"
                                         DialogueTemplate ="{StaticResource DialogueTemplate}"
                                         BranchNodeTemplate ="{StaticResource BranchNodeTemplate}"/>
</ResourceDictionary>
    
<!--############### Some Observations ###############-->
<!--
    - Don't use fixed properties like widths, heights, alignments, etc. inside control templates as it may result in unacceptable behaviors.
    - I used margins for the grid inside of data template, that's wrong. Use it for the list view item itself, not the content.
    - Don't forget to change the border's back ground and behavior like mouse over, is selected, etc.
    - The border works as the selection.
    - Consider doing this:
        - use event setter for the rich text box to hide the text box and the make the item be selected.
        - if everything works fine, maybe try add a button and use it as selection instead of the rich text box.
                - Important note: if the button is used as selection, then disable border's functionalities.
    - If everything goes well. Test other data templates and don't forget to remove fixed properties.
    
    - P.S. the margins of the scene header currently only works for the first index of the list.
    - P.S.P.S. Tested Is Keyboard focused and it works!!!
-->