<UserControl x:Class="UDSH.View.SideContentUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UDSH.View"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             Focusable="True"
             Loaded="UserControl_Loaded"
             d:DesignHeight="450" d:DesignWidth="800">
    
    <Grid FocusManager.IsFocusScope="True">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Image Panel.ZIndex="1" Grid.Row="1" HorizontalAlignment="Left" Margin="10,0,0,0" Source="/Resource/CurrentFiles.png"/>
        <Border x:Name="BorderCollision" Panel.ZIndex="2" Grid.RowSpan="3" Width="200" HorizontalAlignment="Left"
                CornerRadius="{StaticResource HighlightCapture.Radius}" BorderThickness="{StaticResource TestThickness}" Background="{StaticResource SideContentHighlight}" Opacity="0.0"
                BorderBrush="{StaticResource SideContentBar}" Focusable="True" FocusVisualStyle="{x:Null}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <i:InvokeCommandAction Command="{Binding BorderMouseEnter}" CommandParameter="{Binding ElementName=BorderCollision}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding BorderMouseLeave}" CommandParameter="{Binding ElementName=BorderCollision}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding BorderMouseButtonDown}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding BorderMouseButtonUp}" CommandParameter="{Binding ElementName=BorderCollision}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseMove">
                    <i:InvokeCommandAction Command="{Binding BorderMouseMove}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Border>

        <Expander Grid.RowSpan="3" Panel.ZIndex="2" Margin="-22,0,0,0" BorderThickness="0" FlowDirection="LeftToRight" ExpandDirection="Right" HorizontalAlignment="Left" 
                  IsExpanded="{Binding CanExpandSideContent}">
            <Grid x:Name="SideContentBackground" Width="{Binding SideContentWidth, UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding SideContentMouseLeave}" CommandParameter="{Binding ElementName=SideContentBackground}"/>
                    </i:EventTrigger>

                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding SideContentLoad}" CommandParameter="{Binding ElementName=SideContentBackground}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <Rectangle Fill="{StaticResource SideContentSCB}">
                    
                </Rectangle>

                <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,10,0" Width="30" Height="30">
                    <Button/>
                    <Image Source="/Resource/Pin.png"/>
                </Grid>

                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="7,5,0,0">
                        <Image Source="/Resource/SideContent.png" Width="40" Height="40"/>
                        <TextBlock Text="Monster" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontWeight="Bold"/>
                    </StackPanel>

                    <Rectangle Fill="{StaticResource SideContentTitleBarSCB}" HorizontalAlignment="Stretch" Margin="6,3,0,0" Height="3"/>

                    <Border HorizontalAlignment="Stretch" Background="{StaticResource SearchBarSCB}" BorderThickness="2" BorderBrush="{StaticResource SearchBarBorderSCB}" 
                            CornerRadius="4" Margin="6,6,6,0" Height="40">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                            <Image Source="/Resource/Search.png" Margin="7"/>
                            <Grid Margin="4,0,0,0" VerticalAlignment="Center"> <!-- TODO: Update the width dynamically (it depends on the side content width). Also, Don't wrap the text -->
                                <TextBlock Text="Search..." Foreground="{StaticResource SearchTextHeaderSCB}"/>
                                <TextBox Background="{StaticResource MainBlankSCB}" FontSize="18" FontWeight="Bold"/>
                            </Grid>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Grid>
        </Expander>

        <!-- Test Width -->
        <TextBlock Grid.Row="3" Panel.ZIndex="3" Text="{Binding SideContentWidth}" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

    </Grid>
</UserControl>

<!-- Collection of methods. don't discard them, may need them later -->
    
<!-- Key Action
    <i:Interaction.Triggers>
    <i:EventTrigger EventName="Keyboard.KeyDown">
        <i:InvokeCommandAction Command="{Binding SideContentModification}"/>
    </i:EventTrigger>
    </i:Interaction.Triggers>
-->
    
<!-- Key Action (Better approach). Need focus to be able to record the input from user.
    <Border.InputBindings>
    <KeyBinding Modifiers="Ctrl" Key="LeftCtrl" Command="{Binding BorderModificationControl}"/>
    </Border.InputBindings>
-->
    
<!-- Old. Keep them though :)
    <Rectangle x:Name="EnableBorderCollision" Panel.ZIndex="0" Grid.RowSpan="3" Fill="Green" Focusable="True">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseEnter">
            <i:InvokeCommandAction Command="{Binding EnableBorderModification}" CommandParameter="{Binding ElementName=EnableBorderCollision}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Rectangle.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="LeftCtrl" Command="{Binding BorderModificationControl}"/>
    </Rectangle.InputBindings>
    </Rectangle>
-->