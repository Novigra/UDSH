<!-- Copyright (C) 2025 Mohammed Kenawy -->
<UserControl x:Class="UDSH.View.SideContentUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UDSH.View"
             xmlns:Conv="clr-namespace:UDSH.Converters"
             xmlns:VM="clr-namespace:UDSH.ViewModel"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             Focusable="True"
             Loaded="UserControl_Loaded"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <Conv:HeightConverter x:Key="HeightConverter"/>
    </UserControl.Resources>

    <Grid FocusManager.IsFocusScope="True">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Border and Sidebar indicator -->
        <Image Panel.ZIndex="1" Grid.Row="1" HorizontalAlignment="Left" Margin="10,0,0,0" Source="/Resource/CurrentFiles.png"/>
        <Border x:Name="BorderCollision" Panel.ZIndex="2" Grid.RowSpan="3" Width="200" HorizontalAlignment="Left"
                CornerRadius="{StaticResource HighlightCapture.Radius}" BorderThickness="{StaticResource TestThickness}" Background="{StaticResource SideContentHighlight}" Opacity="0.0"
                BorderBrush="{StaticResource SideContentBar}" Focusable="True" FocusVisualStyle="{x:Null}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <i:InvokeCommandAction Command="{Binding BorderMouseEnter}" CommandParameter="{Binding ElementName=BorderCollision}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseLeave">
                    <i:InvokeCommandAction Command="{Binding BorderMouseLeave}" CommandParameter="{Binding ElementName=BorderCollision}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding BorderMouseButtonDown}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding BorderMouseButtonUp}" CommandParameter="{Binding ElementName=BorderCollision}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseMove">
                    <i:InvokeCommandAction Command="{Binding BorderMouseMove}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Border>

        <!-- Side Content -->
        <Expander Grid.RowSpan="3" Panel.ZIndex="2" Margin="-22,0,0,0" BorderThickness="0" FlowDirection="LeftToRight" ExpandDirection="Right" HorizontalAlignment="Left" 
                  IsExpanded="{Binding CanExpandSideContent}" FocusVisualStyle="{x:Null}">
            <!-- Container -->
            <Grid x:Name="SideContentBackground" Width="{Binding SideContentWidth, UpdateSourceTrigger=PropertyChanged}" FocusVisualStyle="{x:Null}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding SideContentMouseLeave}" CommandParameter="{Binding ElementName=SideContentBackground}"/>
                    </i:EventTrigger>

                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding SideContentLoad}" CommandParameter="{Binding ElementName=SideContentBackground}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <!-- Side Content Background -->
                <Rectangle Fill="{StaticResource SideContentSCB}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding SideContentBackgroundLeftMouseButtonDown}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Rectangle>

                <!-- Pin Button -->
                <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,10,0" Width="30" Height="30">
                    <ToggleButton Command="{Binding PinSideContent}" Style="{StaticResource HoldButton}"/>
                    <Image Source="/Resource/Pin.png"/>
                </Grid>

                <!-- Title + Searchbar + Content -->
                <StackPanel Orientation="Vertical" FocusVisualStyle="{x:Null}">
                    <!-- Project Title -->
                    <StackPanel Orientation="Horizontal" Margin="7,5,0,0">
                        <Image Source="/Resource/SideContent.png" Width="40" Height="40"/>
                        <TextBlock Text="Monster" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontWeight="Bold"/>
                    </StackPanel>

                    <!-- Underline -->
                    <Rectangle Fill="{StaticResource SideContentTitleBarSCB}" HorizontalAlignment="Stretch" Margin="6,3,0,0" Height="3"/>

                    <!-- Searchbar -->
                    <Border HorizontalAlignment="Stretch" Background="{StaticResource SearchBarSCB}" BorderThickness="2" BorderBrush="{StaticResource SearchBarBorderSCB}" 
                            CornerRadius="4" Margin="6,6,6,0" Height="40" FocusVisualStyle="{x:Null}">
                        <!-- Searchbar Details -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center" FocusVisualStyle="{x:Null}">
                            <!-- Search Icon -->
                            <Image Source="/Resource/Search.png" Margin="7" Panel.ZIndex="0" RenderOptions.BitmapScalingMode="HighQuality">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SearchGotFocused}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                             From="1.0"
                                                                             To="0.0"
                                                                             Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                             To="1.0"
                                                                             Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding CanSearchBoxTextBeFocusable}" Value="False"/>
                                                    <Condition Binding="{Binding ResetSearchBox}" Value="True"/>
                                                    <Condition Binding="{Binding SearchText}" Value=""/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                             From="0.0"
                                                                             To="1.0"
                                                                             Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiDataTrigger.EnterActions>
                                                <MultiDataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                             To="0.0"
                                                                             Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiDataTrigger.ExitActions>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <!-- Text Container -->
                            <Grid Margin="4,0,0,0" VerticalAlignment="Center">
                                <!-- Search Highlight -->
                                <TextBlock Text="Search..." Foreground="{StaticResource SearchTextHeaderSCB}" Panel.ZIndex="0" FontSize="18" FontWeight="SemiBold" Focusable="False">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SearchText}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!-- Search Text -->
                                <TextBox x:Name="UserSearchBox" Background="{StaticResource MainBlankSCB}" FontSize="18" FontWeight="Bold" Width="{Binding TextBoxWidth}"
                                         Text="{Binding SearchText}" Panel.ZIndex="1" Focusable="{Binding CanSearchBoxTextBeFocusable}" BorderThickness="0" FocusVisualStyle="{x:Null}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding SearchBoxFocus}"/>
                                        </i:EventTrigger>

                                        <i:EventTrigger EventName="TextChanged">
                                            <i:InvokeCommandAction Command="{Binding SearchBoxTextChange}" CommandParameter="{Binding ElementName=UserSearchBox}"/>
                                        </i:EventTrigger>

                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                            <i:InvokeCommandAction Command="{Binding SearchBoxLeftMouseButtonDown}" CommandParameter="{Binding ElementName=UserSearchBox}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>

                                <!-- Search bar details animations -->
                                <Grid.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Grid.RenderTransform>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SearchGotFocused}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                                                             From="0.0"
                                                                             To="-35.0"
                                                                             Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                                                             To="0.0"
                                                                             Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding CanSearchBoxTextBeFocusable}" Value="False"/>
                                                    <Condition Binding="{Binding ResetSearchBox}" Value="True"/>
                                                    <Condition Binding="{Binding SearchText}" Value=""/>
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                                                             From="-35.0"
                                                                             To="0.0"
                                                                             Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiDataTrigger.EnterActions>
                                                <MultiDataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)"
                                                                             To="-35.0"
                                                                             Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </MultiDataTrigger.ExitActions>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                            </Grid>
                        </StackPanel>
                    </Border>

                    <Grid>
                        <TreeView x:Name="SideContentTreeView" ItemsSource="{Binding Root.SubNodes}" Margin="5,5,5,0" Style="{StaticResource SideContentTreeView}"
                                  Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Converter={StaticResource HeightConverter}, ConverterParameter=110}">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type VM:Node}" ItemsSource="{Binding SubNodes}">
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Image Source="{Binding NodeImage}" Width="33" Height="33" Margin="0,-3,0,3"/>
                                        <TextBlock Style="{StaticResource DefaultText}" Text="{Binding Name}" Margin="-10,0,0,0"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <i:InvokeCommandAction Command="{Binding TreeViewSelectionChanged}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>

                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding TreeViewMouseDoubleClick}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TreeView>

                        <!-- For Searchbar -->
                        <TreeView x:Name="SideContentTreeViewFILES" ItemsSource="{Binding RootSearch}" Margin="5,5,5,0" Style="{StaticResource Search_SideContentTreeView}" IsHitTestVisible="{Binding CanChooseFromSearch}"
                                  Height="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Converter={StaticResource HeightConverter}, ConverterParameter=110}">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type VM:Node}" ItemsSource="{Binding SubNodes}">
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <Image Source="{Binding NodeImage}" Width="33" Height="33" Margin="0,-3,0,3"/>
                                        <TextBlock Style="{StaticResource DefaultText}" Text="{Binding Name}" Margin="-10,0,0,0"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <i:InvokeCommandAction Command="{Binding TreeViewSelectionChanged}" PassEventArgsToCommand="True"/>
                                </i:EventTrigger>

                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding TreeViewMouseDoubleClick}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TreeView>
                    </Grid>
                </StackPanel>
            </Grid>
        </Expander>

        <!-- Test Width -->
        <TextBlock Grid.Row="3" Panel.ZIndex="3" Text="{Binding SideContentWidth}" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>

    </Grid>
</UserControl>

<!-- Collection of methods. don't discard them, may need them later -->

<!-- Key Action
    <i:Interaction.Triggers>
    <i:EventTrigger EventName="Keyboard.KeyDown">
        <i:InvokeCommandAction Command="{Binding SideContentModification}"/>
    </i:EventTrigger>
    </i:Interaction.Triggers>
-->

<!-- Key Action (Better approach). Need focus to be able to record the input from user.
    <Border.InputBindings>
    <KeyBinding Modifiers="Ctrl" Key="LeftCtrl" Command="{Binding BorderModificationControl}"/>
    </Border.InputBindings>
-->

<!-- Old. Keep them though :)
    <Rectangle x:Name="EnableBorderCollision" Panel.ZIndex="0" Grid.RowSpan="3" Fill="Green" Focusable="True">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseEnter">
            <i:InvokeCommandAction Command="{Binding EnableBorderModification}" CommandParameter="{Binding ElementName=EnableBorderCollision}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Rectangle.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="LeftCtrl" Command="{Binding BorderModificationControl}"/>
    </Rectangle.InputBindings>
    </Rectangle>
-->